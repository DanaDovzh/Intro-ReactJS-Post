{"version":3,"sources":["js/funcions.js","js/Post.js","js/Author.js","img/Walt_Disney.jpg","img/post_walt.jpg","img/mark_zuckerberg.jpg","img/post_mark.jpg","img/joan-rolling.jpg","img/post_joan.jpg","js/App.js","reportWebVitals.js","index.js"],"names":["createIdGenerator","getRandomNumber","min","max","Math","floor","random","start","result","Post","props","personPost","className","id","alt","name","src","photo","verifiedAccount","nickname","date","content","imageContent","comments","onClick","person","liked","document","getElementById","querySelector","classList","toggle","addLike","contains","innerHTML","showLikes","likedPost","likes","share","starId","newAuthor","this","Date","toLocaleDateString","getCheckAccount","next","value","like","Walt","firstPhoto","postFirst","Mark","secondPhoto","postSecond","Joan","thirdPhoto","postThird","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.ab018bd1.chunk.js","sourcesContent":["const getRandomNumber = (min = 1, max = 100) =>  Math.floor(Math.random()* (max - min) + min);\nfunction* createIdGenerator(start) {\n    let result = start;\n    while (true) yield result++;\n  };\n\nconst likedPost = (person) => { \n    const whosPost = document.getElementById(person.id);\n    const liked = whosPost.querySelector(\".post__footer--likes\");\n    liked.classList.toggle(\"unlike\");\n    liked.classList.toggle(\"liked\");\n    person.addLike(liked.classList.contains(\"liked\") ? 1 : -1);\n    liked.innerHTML = person.showLikes();  \n};\nexport {getRandomNumber, createIdGenerator, likedPost}","import React from 'react';\nimport '../css/general.css';\nimport {likedPost} from './funcions';\n\nconst Post = (props) => {\n    const personPost = props.props;\n    return(\n        <div className = \"post\" id = {personPost.id}>\n                <div className = \"post__heading\">\n                    <div><img alt = {personPost.name} src={personPost.photo} className = \"post__heading--photo\"/>\n                    </div>\n                    <div className = \"post__heading--info\">\n                        <div className = \"post__heading--personal-info\">\n                            <p className = {\n                                personPost.verifiedAccount ? \"post__heading--personal-info-check\" : \"\"\n                            }>{personPost.name}</p>\n                            <p className = \"nickname\">{personPost.nickname}</p>\n                            <p className = \"date\">{personPost.date}</p>\n                        </div>\n                        <div className = \"post__heading--content\">\n                            <p>{personPost.content}</p>\n                        </div>\n                    </div>\n                </div> \n                <div className = \"post__body\">\n                    <img src = {personPost.imageContent} alt = \"Post\" className = \"post__body--content\"/>\n                </div>\n                <div className = \"post__footer\">\n                    <p className = \"post__footer--comments post-action\">{personPost.comments}</p>\n                    <p className = \"post__footer--likes unlike post-action\" onClick = {() => likedPost(personPost)}>{personPost.likes}</p>\n                    <p className = \"post__footer--share post-action\">{personPost.share}</p>\n                    <p className = \"post__footer--cloud post-action\"></p>\n                </div>\n        </div>\n    )\n}\n\nexport default Post;","import {getRandomNumber, createIdGenerator} from './funcions';\n\nconst starId = createIdGenerator(1);\n\nclass newAuthor {\n    constructor (name, nickname, content, photo, imageContent) {\n      this.name = name;\n      this.nickname = nickname;\n      this.photo = photo;\n      this.content = content;\n      this.imageContent = imageContent;\n      this.date = new Date().toLocaleDateString();\n      this.likes = getRandomNumber(3000, 9000);\n      this.comments = getRandomNumber(100, 1000);;\n      this.share = getRandomNumber(30, 900);;\n      this.verifiedAccount = this.getCheckAccount;\n      this.id = starId.next().value;\n    }\n  \n    get getCheckAccount () {\n      return (this.likes > 5000);\n    }\n\n    addLike(like = 1) {\n      this.likes += like;\n    }\n\n    showLikes() {\n      return this.likes;\n    }\n  };\n\n  export default newAuthor;","export default __webpack_public_path__ + \"static/media/Walt_Disney.935486f7.jpg\";","export default __webpack_public_path__ + \"static/media/post_walt.ea2fce57.jpg\";","export default __webpack_public_path__ + \"static/media/mark_zuckerberg.132683e9.jpg\";","export default __webpack_public_path__ + \"static/media/post_mark.ee44b803.jpg\";","export default __webpack_public_path__ + \"static/media/joan-rolling.87038b1b.jpg\";","export default __webpack_public_path__ + \"static/media/post_joan.66574bde.jpg\";","import Post from './Post';\nimport newAuthor from './Author';\nimport firstPhoto from '../img/Walt_Disney.jpg';\nimport postFirst from '../img/post_walt.jpg';\nimport secondPhoto from '../img/mark_zuckerberg.jpg';\nimport postSecond from '../img/post_mark.jpg';\nimport thirdPhoto from '../img/joan-rolling.jpg';\nimport postThird from '../img/post_joan.jpg';\n\nconst Walt = new newAuthor(\"Walt Disney\", \"@waltDisney\", \"Some people are worth melting for.\", firstPhoto, postFirst);\nconst Mark = new newAuthor(\"Mark Zuckerberg\", \"@finkd\", \"Move fast and break things. Unless you are breaking stuff, you are not moving fast enough!\", secondPhoto,\npostSecond);\nconst Joan = new newAuthor(\"J.K. Rowling\", \"@jk_rowling\", \"Every human life is worth the same, and worth saving.\", thirdPhoto, postThird);\nfunction App() {\n  return (\n    <div className = \"wrapper\">\n      <Post props = {Walt} />\n      <Post props = {Mark} />\n      <Post props = {Joan} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './js/App';\nimport reportWebVitals from './reportWebVitals';\n\n    \nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}